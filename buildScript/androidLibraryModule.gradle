subprojects {
    afterEvaluate { project ->
        if (project.getPlugins().hasPlugin('com.android.library')) {
            android {
                compileSdkVersion build.compileSdkVersion
                buildToolsVersion build.buildToolsVersion
                defaultConfig {
                    minSdkVersion build.minSdkVersion
                    targetSdkVersion build.targetSdkVersion
                    versionCode app.versionCode
                    versionName app.versionName
                    consumerProguardFiles 'consumer-rules.pro'
                    vectorDrawables.useSupportLibrary true
                    multiDexEnabled true
                }
                buildTypes {
                    release {
                        minifyEnabled true
                        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                    }
                    debug {
                        minifyEnabled false
                        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                    }
                }
                compileOptions {
                    coreLibraryDesugaringEnabled true
                    sourceCompatibility JavaVersion.VERSION_1_8
                    targetCompatibility JavaVersion.VERSION_1_8
                }
                kotlinOptions {
                    jvmTarget = "1.8"
                    freeCompilerArgs += [
                            "-Xopt-in=kotlin.RequiresOptIn",
                            "-Xinline-classes"
                    ]
                }
                if (project.getPlugins().hasPlugin('kotlin-android-extensions')) {
                    androidExtensions {
                        experimental = true
                    }
                }
            }
            dependencies {
                coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:$library.desugar"
            }
            preBuild.dependsOn "detekt"
        }
    }
}